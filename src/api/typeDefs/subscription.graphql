enum SubscriptionType {
  TIME
  ENTRY
}

enum SubscriptionPeriod {
  THREE
  SIX
  TWELVE
}

type Subscription {
  id: Int!
  type: SubscriptionType!
  entries: Int
  period: SubscriptionPeriod
  validTill: Date
  isActive: Boolean!
  createdAt: Date!
  updatedAt: Date!
  ownerId: Int
  owner: Member
}

type ActiveSubscriptions {
  id: Int!
  cardNumber: Int!
  firstName: String!
  lastName: String!
  isStudent: Boolean!
  hasActiveMembership: Boolean!
  membershipValidTill: Date!
  visits: Int
  createdAt: Date!
  updatedAt: Date!
  isBlocked: Boolean
  subscriptions: [Subscription]
}

input CreateSubscriptionDataInput {
  type: SubscriptionType!
  entries: Int
  period: SubscriptionPeriod
}

input ConfirmEntryInput {
  subscriptionId: Int!
  type: SubscriptionType
}

type Query {
  subscriptions: [Subscription]!
  activeSubscriptionsByCardNumber(cardNumber: Int!): ActiveSubscriptions!
}

type Mutation {
  confirmEntry(input: ConfirmEntryInput): Boolean
}
