type Member {
  id: Int
  barcode: Int
  firstName: String
  lastName: String
  isStudent: Boolean
  hasActiveMembership: Boolean
  membershipValidTill: Date
  visits: Int
  createdAt: Date
  updatedAt: Date
  isBlocked: Boolean
  subscriptions: [Subscription]
  personalData: PersonalData
  address: String
  country: String
  email: String
  telNumber: String
  gender: GenderType
}

input CreateMemberInput {
  barcode: Int!
  firstName: String!
  lastName: String!
  address: String!
  telNumber: String
  email: String
  isStudent: Boolean
  country: String!
  gender: GenderType!
  type: SubscriptionType
  entries: Int
  period: SubscriptionPeriod
}

type Mutation {
  createMember(input: CreateMemberInput!): Member
}

type Query {
  members: [Member]!
}
